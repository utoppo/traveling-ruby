# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/
version: 2.1

parameters:
  RB_VERSION:
    type: string
    default: 3.2.2
  PKG_DATE:
    type: integer
    default: 20230428
  BUNDLER_VERSION:
    type: string
    default: 2.3.17

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-mac-x86_64:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    macos:
      xcode: "14.2.0"

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run: |
            rbenv local system
            sudo gem install bundler:<< pipeline.parameters.BUNDLER_VERSION >>
            brew update && brew upgrade ruby-build
            brew install libyaml
            rbenv install << pipeline.parameters.RB_VERSION >>
            rbenv global << pipeline.parameters.RB_VERSION >>
            cd osx
            uname -m
            rake stash_conflicting_paths
            DEVELOPER_DIR=/Library/Developer/CommandLineTools rake --trace
            ls
      - store_artifacts:
          path: osx/traveling-ruby-<< pipeline.parameters.PKG_DATE >>-<< pipeline.parameters.RB_VERSION >>-osx-x86_64.tar.gz
          destination: traveling-ruby-<< pipeline.parameters.PKG_DATE >>-<< pipeline.parameters.RB_VERSION >>-osx-x86_64.tar.gz
  build-linux-x86_64:
    machine:
      image: ubuntu-2204:2023.02.1
    steps:
      - checkout
      - run: |
            uname -m
            cd linux
            ARCHITECTURES="x86_64" rake image
            ARCHITECTURES="x86_64" rake
      - store_artifacts:
          path: linux/traveling-ruby-<< pipeline.parameters.PKG_DATE >>-<< pipeline.parameters.RB_VERSION >>-linux-x86_64.tar.gz
          destination: traveling-ruby-<< pipeline.parameters.PKG_DATE >>-<< pipeline.parameters.RB_VERSION >>-linux-x86_64.tar.gz
  build-linux-arm64:
    machine:
      image: ubuntu-2204:2023.02.1
    resource_class: arm.medium
    steps:
      - checkout
      - run: |
            uname -m
            cd linux
            ARCHITECTURES="arm64" rake image
            ARCHITECTURES="arm64" rake
      - store_artifacts:
          path: linux/traveling-ruby-<< pipeline.parameters.PKG_DATE >>-<< pipeline.parameters.RB_VERSION >>-linux-arm64.tar.gz
          destination: traveling-ruby-<< pipeline.parameters.PKG_DATE >>-<< pipeline.parameters.RB_VERSION >>-linux-arm64.tar.gz
  build-windows:
    machine:
      image: 'windows-server-2022-gui:current'
    resource_class: windows.medium
    steps:
      - checkout
      - run:
          command: |
              uname -m
              cd windows
              sh -c 'mkdir -p cache output/<< pipeline.parameters.RB_VERSION >>'
              sh -c './build-ruby -a x86_64 -r << pipeline.parameters.RB_VERSION >> cache output/<< pipeline.parameters.RB_VERSION >>'
              sh -c './package -r traveling-ruby-<< pipeline.parameters.PKG_DATE >>-<< pipeline.parameters.RB_VERSION >>-x86_64-windows.tar.gz output/<< pipeline.parameters.RB_VERSION >>'
              sh -c 'ls'
              sh -c 'rm -rf cache \"output/<< pipeline.parameters.RB_VERSION >>\"'
              sh -c 'mkdir -p cache output/<< pipeline.parameters.RB_VERSION >>'
              sh -c './build-ruby -a x86 -r << pipeline.parameters.RB_VERSION >> cache output/<< pipeline.parameters.RB_VERSION >>'
              sh -c './package -r traveling-ruby-<< pipeline.parameters.PKG_DATE >>-<< pipeline.parameters.RB_VERSION >>-x86-windows.tar.gz output/<< pipeline.parameters.RB_VERSION >>'
              sh -c 'ls'
      - store_artifacts:
          path: windows/traveling-ruby-<< pipeline.parameters.PKG_DATE >>-<< pipeline.parameters.RB_VERSION >>-x86_64-windows.tar.gz
          destination: traveling-ruby-<< pipeline.parameters.PKG_DATE >>-<< pipeline.parameters.RB_VERSION >>-x86_64-windows.tar.gz
      - store_artifacts:
          path: windows/traveling-ruby-<< pipeline.parameters.PKG_DATE >>-<< pipeline.parameters.RB_VERSION >>-x86-windows.tar.gz
          destination: traveling-ruby-<< pipeline.parameters.PKG_DATE >>-<< pipeline.parameters.RB_VERSION >>-x86-windows.tar.gz

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  x-plat:
    jobs:
      - build-mac-x86_64
      - build-linux-arm64
      - build-linux-x86_64
      - build-windows
